version: '2'
services:
  monolith:
    build: .
    ports:
        - "8001:8000"
    logging:
        driver: syslog
        options:
          syslog-address: "tcp://localhost:5000"
          syslog-format: "rfc3164"
          tag: "registration"
    depends_on:
      - elasticsearch
      - kibana
      - logstash
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    logging:
        driver: syslog
        options:
          syslog-address: "tcp://localhost:5000"
          syslog-format: "rfc3164"
          tag: "kafka"
  kafka:
    build: .
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: vagrant
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
        driver: syslog
        options:
          syslog-address: "tcp://localhost:5000"
          syslog-format: "rfc3164"
          tag: "kafka"
    depends_on:
      - elasticsearch
      - kibana
      - logstash
 #rabbitmq:
 #    image: rabbitmq:3.6.9-management
 #    ports:
 #      - "15672:15672"
 #      - "5672:5672"
 #    volumes:
 #      - ./config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
 #      - ./config/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
 #    depends_on:
 #      - elasticsearch
 #      - kibana
 #      - logstash
  elasticsearch:
    build: config/elasticsearch/
    volumes:
      - ./config/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
  logstash:
    build: config/logstash/
    volumes:
      - ./config/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./config/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
  kibana:
    build: config/kibana/
    volumes:
      - ./config/kibana/config/:/usr/share/kibana/config
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
  consul:
      image: "consul"
      hostname: "consul"
      ports:
        - "8400:8400"
        - "8500:8500"
        - "8600:53/udp"
      command: "agent -dev -client 0.0.0.0"
  vault:
    depends_on:
      - consul
    image: "vault"
    hostname: "vault"
    links:
      - "consul:consul"
    environment:
      VAULT_ADDR: http://127.0.0.1:8200
    ports:
      - "8200:8200"
    volumes:
      - ./tools/wait-for-it.sh:/wait-for-it.sh
      - ./config/vault:/config
      - ./config/vault/policies:/policies
    entrypoint: /wait-for-it.sh -t 20 -h consul -p 8500 -s -- vault server -config=/config/with-consul.hcl
networks:
  elk:
    driver: bridge
